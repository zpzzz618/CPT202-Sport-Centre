
body {  
  font-family: Arial, sans-serif;  
  display: flex;  /*Flex布局是一种一维布局模型，它可以轻松地在不同的屏幕尺寸和设备上设计灵活的响应式布局结构。*/
  justify-content: center;  /*justify-content属性用于在主轴（默认为水平方向）上对齐flex子项。这里设置为center，意味着<body>元素的子项会在水平方向上居中。*/
  align-items: center;  /*align-items属性用于在交叉轴（默认为垂直方向）上对齐flex子项。这里设置为center，意味着<body>元素的子项会在垂直方向上居中。*/
  height: 100vh;  /*设置了<body>元素的高度为其视口高度（viewport height）的100%。vh是一个视口单位，它等于视口高度的1%。因此，100vh意味着<body>元素将占据整个视口的高度。*/
  margin: 0;  /*将<body>元素的外边距（margin）设置为0。默认情况下，浏览器会给<body>元素一定的外边距，这行代码将其去除，确保<body>元素从视口的顶部和底部开始，没有额外的空间。*/
  background-color: #f2f2f2;  /*设置了<body>元素的背景颜色为#f2f2f2，这是一个浅灰色。*/  
 
  /* 设置背景图片 */  
  background-image: url('../../a_img/background2.jpg');  
  background-repeat: no-repeat; /* 不重复图片 */  
  background-size: cover; /* 覆盖整个页面 */  
  background-position: center; /* 居中显示图片 */ 
}  
  
/* 创建一个伪元素来应用模糊效果 */  
body::before {  
  content: ""; /* 伪元素需要内容才能显示 */  
  position: fixed; /* 使用fixed定位让伪元素始终覆盖整个页面 */  
  top: 0;  
  right: 0;  
  bottom: 0;  
  left: 0;  
  z-index: -1; /* 确保伪元素在内容之下 */  
  /* 复制背景图片 */  
  background-image: inherit; /* 继承body的背景图片 */  
  background-repeat: no-repeat;  
  background-size: cover;  
  background-position: center;  
  /* 应用模糊效果 */  
  filter: blur(5px); /* 根据需要调整模糊度 */  
} 


.find-box {  
  display: flex;  
  height: 55vh;
  width: 65vw;
  flex-direction: column;  
  align-items: flex-start;  
  justify-content: center; /* 可以根据需要调整 */  
  padding: 15px; /* 添加一些内边距，让内容不紧贴边界 */  
  background-color: rgba(255, 255, 255, 0.65); 
  box-shadow: 0 0 30px rgba(21, 7, 0, 0.329);/*颜色待定*/
  border-radius: 5px; 
}  

.biaoti{
  width: 100%; /* 占屏幕四分之一宽度 */
  text-align: center; 
  position: absolute;
  top: 23vh;/*+100*/ 
}

 .input {  
  display: flex;  
  flex-wrap: wrap; /* 允许子元素换行 */  
  justify-content: center; /* 在主轴上居中对齐子元素 */   
}  

.input-combin1, .input-combin2 {  
  display: flex;  
  align-items: center; /* 垂直居中对齐 */ 
  justify-content: center; /* 在主轴上居中对齐子元素 */   
  width: 100%; /* 设置组合宽度为100% */  
  margin-bottom: 100px;
}  
  
.input-combin1 label, .input-combin2 label {  
  width: 15vw; /* 设置标签的固定宽度，或者根据需要调整 */  
  text-align:right; /* 右对齐文本 */  
}  

.input-combin1 input, .input-combin2 input {  
  flex-grow:1; /* 使输入框填充剩余空间 */  
  border-radius: 5px;/*改边框弧度*/ 
  padding: 7px;
  
  background-color: #ffffffa4; /* 设置输入框的背景颜色为白色 */  
  border-color: #fc9393; /* 设置输入框的边框颜色为黑色 */  
  border-width: 5px; /* 设置边框宽度，如果需要的话 */  
  border-style: none; /* 设置边框样式为实线，如果需要的话 */  
  /*
  实线边框（solid）：边框为实心线条。
  虚线边框（dashed）：边框由一系列的短线段和间隔组成。
  点状边框（dotted）：边框由一系列的小点组成。
  双线边框（double）：边框由两条并行的实线组成，两条线之间有一定的间距。
  阴影边框（groove）：边框看起来像是内嵌在元素中的凹槽。
  凸出边框（ridge）：边框看起来像是从元素中凸出的线条。
  插图边框（inset）：边框看起来像是元素的一部分，像是被嵌入的。
  凸显边框（outset）：边框看起来像是从元素中凸出的，与ridge相似，但视觉效果可能略有不同。
*/
}  


/*按钮部分，大小位置还要调整*/
.onebutton{
  width: 120px; /* 调整按钮的宽度 */  
  height: 40px; /* 设置按钮的高度 */ 
  margin-left: 250px; 
  margin-right: 200px;
  background-color:#adadac;
  color: #ffffff;  
  border: none;  
  border-radius: 3px;  
  cursor: pointer;  
  padding: 10px;
  font-size: 18px;

  position: absolute;
  bottom: 30vh;
  left: 25vw;
  
}

.onebutton:hover {  
  background-color: #ff9a68;  
}
.twobutton{
  width: 120px; /* 调整按钮的宽度 */  
  height: 40px; /* 设置按钮的高度 */ 
  margin-left: 250px; 
  margin-right: 200px;
  background-color:#adadac;
  color: #ffffff;  
  border: none;  
  border-radius: 3px;  
  cursor: pointer;  
  padding: 10px;
  font-size: 18px;

  position: absolute;
  bottom: 30vh;
  left: 35vw;
  
}
.twobutton:hover {  
  background-color: #ff9a68;  
}

